mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir)
allA
plot(allA$AIC)
allB <- BIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir)
allB
plot(allB$BIC)
mLohn <- glm(normY~(1+wcon+wsta+wser+wtrd+wfir), data = crimes.data, family = poisson(link="log"))
plot(mLohn, which = 1)
AIC(mLohn)
BIC(mLohn)
anova(mLohn)
step(mLohn, ~(1+wcon+wsta+wser+wtrd+wfir))
m5 <- glm(normY~(1+prbarr+region+area+density+area:density+wcon+wsta+wser+wtrd+wfir), data = crimes.data, family = binomial)
plot(m5, which = 1)
AIC(m5)
BIC(m5)
anova(m5)
summary(m5)
m5T <- glm(normY~(1+prbarr+region+area+density+wcon+wsta+wser+wtrd+wfir), data = crimes.data, family = binomial)
AIC(m5T)
BIC(m5T)
anova(m5T)
summary(m5T)
coef(m5T)
mRegionI <- glm(crimes ~ density + wcon + wsta + wser + wtrd + wfir
+ prbarr:region + prbpris:region + prbpris:region
+ prbpris:region + polpc:region + density:region
+ area:region + taxpc:region + region:pctmin
+ region:pctymale + region:wcon,
data = crimes.data)
AIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir,
mLohn, m5, m5T, mRegionI)
mRegionI <- glm(crimes ~ density + prbarr:region + prbpris:region + prbpris:region
+ prbpris:region + polpc:region + density:region
+ area:region + taxpc:region + region:pctmin
+ region:pctymale + region:wcon,
data = crimes.data)
AIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir,
mLohn, m5, m5T, mRegionI)
### cross validation ###
#lm5 <- lm(normY~(1+prbarr+region+area+density+wcon+wsta+wser+wtrd+wfir), data = crimes.data)
#lm4 <- lm(normY~(1+prbarr+region), data = crimes.data)
#lm3 <- lm(crimes~1+area+density+area:density, data = crimes.data)
#lm2 <- lm(crimes~(1+prbarr+prbpris)^2, data = crimes.data)
#lm1 <- lm(crimes~1+prbarr:prbpris, data = crimes.data)
mPrbarr <- glm(normY~(1+prbarr), data = crimes.data)
mPrbpris <- glm(normY~(1+prbpris), data = crimes.data)
mPolpc <- glm(normY~(1+prbpris), data = crimes.data)
mDensity <- glm(normY~(1+density), data = crimes.data)
mArea <- glm(normY~(1+area), data = crimes.data)
mTaxpc <- glm(normY~(1+taxpc), data = crimes.data)
mRegion <- glm(normY~(1+region), data = crimes.data)
mPctmin <- glm(normY~(1+pctmin), data = crimes.data)
mPctymale <- glm(normY~(1+pctymale), data = crimes.data)
mWcon <- glm(normY~(1+wcon), data = crimes.data)
mWsta <- glm(normY~(1+wsta), data = crimes.data)
mWser <- glm(normY~(1+wser), data = crimes.data)
mWtrd <- glm(normY~(1+wtrd), data = crimes.data)
mWfir <- glm(normY~(1+wfir), data = crimes.data)
cross_validation <- function(repeats = 10) {
index <- rep(1:7, each = 6)
index <- index[-(dim(crimes.data)[1]+1)]
index <- sample(index)
SPSE1 <- SPSE2 <- SPSE3 <- SPSE4 <- SPSE5 <- SPSE6 <- SPSE7 <- SPSE8 <- SPSE9 <- SPSE10 <- SPSE11 <- SPSE12 <- SPSE13 <- SPSE14 <- 0
for(i in 1:repeats) {
crimes.test <- crimes.data[index==i,]
crimes.train <- crimes.data[-index!=i,]
# schätzung der parameter
#lm5 <- lm(normY~(1+prbarr+region+area+density+wcon+wsta+wser+wtrd+wfir), data = crimes.data)
#lm4 <- lm(normY~(1+prbarr+region), data = crimes.data)
#lm3 <- lm(crimes~1+area+density+area:density, data = crimes.data)
#lm2 <- lm(crimes~(1+prbarr+prbpris)^2, data = crimes.data)
#lm1 <- lm(crimes~1+prbarr:prbpris, data = crimes.data)
mPrbarr <- glm(normY~(1+prbarr), data = crimes.data)
mPrbpris <- glm(normY~(1+prbpris), data = crimes.data)
mPolpc <- glm(normY~(1+prbpris), data = crimes.data)
mDensity <- glm(normY~(1+density), data = crimes.data)
mArea <- glm(normY~(1+area), data = crimes.data)
mTaxpc <- glm(normY~(1+taxpc), data = crimes.data)
mRegion <- glm(normY~(1+region), data = crimes.data)
mPctmin <- glm(normY~(1+pctmin), data = crimes.data)
mPctymale <- glm(normY~(1+pctymale), data = crimes.data)
mWcon <- glm(normY~(1+wcon), data = crimes.data)
mWsta <- glm(normY~(1+wsta), data = crimes.data)
mWser <- glm(normY~(1+wser), data = crimes.data)
mWtrd <- glm(normY~(1+wtrd), data = crimes.data)
mWfir <- glm(normY~(1+wfir), data = crimes.data)
# schätzung des prognosefehlers
SPSE1 <- SPSE1 + sum((crimes.test$crimes - predict(lm1, newdata=crimes.test))^2)
SPSE2 <- SPSE2 + sum((crimes.test$crimes - predict(lm2, newdata=crimes.test))^2)
SPSE3 <- SPSE3 + sum((crimes.test$crimes - predict(lm3, newdata=crimes.test))^2)
SPSE4 <- SPSE4 + sum((crimes.test$crimes - predict(lm4, newdata=crimes.test))^2)
SPSE5 <- SPSE5 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE6 <- SPSE6 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE7 <- SPSE7 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE8 <- SPSE8 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE9 <- SPSE9 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE10 <- SPSE10 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE11 <- SPSE11 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE12 <- SPSE12 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE13 <- SPSE13 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE14 <- SPSE14 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
}
cbind(SPSE1, SPSE2, SPSE3, SPSE4, SPSE5, SPSE6, SPSE7, SPSE8, SPSE9, SPSE10, SPSE11, SPSE12, SPSE13, SPSE14,
min(SPSE1, SPSE2, SPSE3, SPSE4, SPSE5, SPSE6, SPSE7, SPSE8, SPSE9, SPSE10, SPSE11, SPSE12, SPSE13, SPSE14))
}
cross_validation()
plot(cross_validation())
### cross validation ###
#lm5 <- lm(normY~(1+prbarr+region+area+density+wcon+wsta+wser+wtrd+wfir), data = crimes.data)
#lm4 <- lm(normY~(1+prbarr+region), data = crimes.data)
#lm3 <- lm(crimes~1+area+density+area:density, data = crimes.data)
#lm2 <- lm(crimes~(1+prbarr+prbpris)^2, data = crimes.data)
#lm1 <- lm(crimes~1+prbarr:prbpris, data = crimes.data)
mPrbarr <- glm(normY~(1+prbarr), data = crimes.data)
mPrbpris <- glm(normY~(1+prbpris), data = crimes.data)
mPolpc <- glm(normY~(1+prbpris), data = crimes.data)
mDensity <- glm(normY~(1+density), data = crimes.data)
mArea <- glm(normY~(1+area), data = crimes.data)
mTaxpc <- glm(normY~(1+taxpc), data = crimes.data)
mRegion <- glm(normY~(1+region), data = crimes.data)
mPctmin <- glm(normY~(1+pctmin), data = crimes.data)
mPctymale <- glm(normY~(1+pctymale), data = crimes.data)
mWcon <- glm(normY~(1+wcon), data = crimes.data)
mWsta <- glm(normY~(1+wsta), data = crimes.data)
mWser <- glm(normY~(1+wser), data = crimes.data)
mWtrd <- glm(normY~(1+wtrd), data = crimes.data)
mWfir <- glm(normY~(1+wfir), data = crimes.data)
cross_validation <- function(repeats = 10) {
index <- rep(1:7, each = 6)
index <- index[-(dim(crimes.data)[1]+1)]
index <- sample(index)
SPSE1 <- SPSE2 <- SPSE3 <- SPSE4 <- SPSE5 <- SPSE6 <- SPSE7 <- SPSE8 <- SPSE9 <- SPSE10 <- SPSE11 <- SPSE12 <- SPSE13 <- SPSE14 <- 0
for(i in 1:repeats) {
crimes.test <- crimes.data[index==i,]
crimes.train <- crimes.data[-index!=i,]
# schätzung der parameter
#lm5 <- lm(normY~(1+prbarr+region+area+density+wcon+wsta+wser+wtrd+wfir), data = crimes.data)
#lm4 <- lm(normY~(1+prbarr+region), data = crimes.data)
#lm3 <- lm(crimes~1+area+density+area:density, data = crimes.data)
#lm2 <- lm(crimes~(1+prbarr+prbpris)^2, data = crimes.data)
#lm1 <- lm(crimes~1+prbarr:prbpris, data = crimes.data)
mPrbarr <- glm(normY~(1+prbarr), data = crimes.data)
mPrbpris <- glm(normY~(1+prbpris), data = crimes.data)
mPolpc <- glm(normY~(1+prbpris), data = crimes.data)
mDensity <- glm(normY~(1+density), data = crimes.data)
mArea <- glm(normY~(1+area), data = crimes.data)
mTaxpc <- glm(normY~(1+taxpc), data = crimes.data)
mRegion <- glm(normY~(1+region), data = crimes.data)
mPctmin <- glm(normY~(1+pctmin), data = crimes.data)
mPctymale <- glm(normY~(1+pctymale), data = crimes.data)
mWcon <- glm(normY~(1+wcon), data = crimes.data)
mWsta <- glm(normY~(1+wsta), data = crimes.data)
mWser <- glm(normY~(1+wser), data = crimes.data)
mWtrd <- glm(normY~(1+wtrd), data = crimes.data)
mWfir <- glm(normY~(1+wfir), data = crimes.data)
# schätzung des prognosefehlers
SPSE1 <- SPSE1 + sum((crimes.test$crimes - predict(lm1, newdata=crimes.test))^2)
SPSE2 <- SPSE2 + sum((crimes.test$crimes - predict(lm2, newdata=crimes.test))^2)
SPSE3 <- SPSE3 + sum((crimes.test$crimes - predict(lm3, newdata=crimes.test))^2)
SPSE4 <- SPSE4 + sum((crimes.test$crimes - predict(lm4, newdata=crimes.test))^2)
SPSE5 <- SPSE5 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE6 <- SPSE6 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE7 <- SPSE7 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE8 <- SPSE8 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE9 <- SPSE9 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE10 <- SPSE10 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE11 <- SPSE11 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE12 <- SPSE12 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE13 <- SPSE13 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE14 <- SPSE14 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
}
SPSE1 <- SPSE1/1000000
SPSE2 <- SPSE1/1000000
SPSE3 <- SPSE1/1000000
SPSE4 <- SPSE1/1000000
SPSE5 <- SPSE1/1000000
SPSE6 <- SPSE1/1000000
SPSE7 <- SPSE1/1000000
SPSE8 <- SPSE1/1000000
SPSE9 <- SPSE1/1000000
SPSE10 <- SPSE1/1000000
SPSE11 <- SPSE1/1000000
SPSE12 <- SPSE1/1000000
SPSE13 <- SPSE1/1000000
SPSE14 <- SPSE1/1000000
cbind(SPSE1, SPSE2, SPSE3, SPSE4, SPSE5, SPSE6, SPSE7, SPSE8, SPSE9, SPSE10, SPSE11, SPSE12, SPSE13, SPSE14,
min(SPSE1, SPSE2, SPSE3, SPSE4, SPSE5, SPSE6, SPSE7, SPSE8, SPSE9, SPSE10, SPSE11, SPSE12, SPSE13, SPSE14))
}
plot(cross_validation())
cross_validation()
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
plot(cross_validation(1))
cross_validation(1)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
cross_validation(1)
plot(cross_validation(1))
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
cross_validation()
cross_validation()
cross_validation(1)
cross_validation(100)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
cross_validation(1)
cross_validation(10)
cross_validation(100)
typeof(cross_validation())
cv <- cross_validation(); order(cv)
cbind(SPSE1, SPSE2, SPSE3, SPSE4, SPSE5, SPSE6, SPSE7, SPSE8, SPSE9, SPSE10, SPSE11, SPSE12, SPSE13, SPSE14))
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
### cross validation ###
#lm5 <- lm(normY~(1+prbarr+region+area+density+wcon+wsta+wser+wtrd+wfir), data = crimes.data)
#lm4 <- lm(normY~(1+prbarr+region), data = crimes.data)
#lm3 <- lm(crimes~1+area+density+area:density, data = crimes.data)
#lm2 <- lm(crimes~(1+prbarr+prbpris)^2, data = crimes.data)
#lm1 <- lm(crimes~1+prbarr:prbpris, data = crimes.data)
mPrbarr <- glm(normY~(1+prbarr), data = crimes.data)
mPrbpris <- glm(normY~(1+prbpris), data = crimes.data)
mPolpc <- glm(normY~(1+prbpris), data = crimes.data)
mDensity <- glm(normY~(1+density), data = crimes.data)
mArea <- glm(normY~(1+area), data = crimes.data)
mTaxpc <- glm(normY~(1+taxpc), data = crimes.data)
mRegion <- glm(normY~(1+region), data = crimes.data)
mPctmin <- glm(normY~(1+pctmin), data = crimes.data)
mPctymale <- glm(normY~(1+pctymale), data = crimes.data)
mWcon <- glm(normY~(1+wcon), data = crimes.data)
mWsta <- glm(normY~(1+wsta), data = crimes.data)
mWser <- glm(normY~(1+wser), data = crimes.data)
mWtrd <- glm(normY~(1+wtrd), data = crimes.data)
mWfir <- glm(normY~(1+wfir), data = crimes.data)
cross_validation <- function(repeats = 10) {
index <- rep(1:7, each = 6)
index <- index[-(dim(crimes.data)[1]+1)]
index <- sample(index)
SPSE1 <- SPSE2 <- SPSE3 <- SPSE4 <- SPSE5 <- SPSE6 <- SPSE7 <- SPSE8 <- SPSE9 <- SPSE10 <- SPSE11 <- SPSE12 <- SPSE13 <- SPSE14 <- 0
for(i in 1:repeats) {
crimes.test <- crimes.data[index==i,]
crimes.train <- crimes.data[-index!=i,]
# schätzung der parameter
#lm5 <- lm(normY~(1+prbarr+region+area+density+wcon+wsta+wser+wtrd+wfir), data = crimes.data)
#lm4 <- lm(normY~(1+prbarr+region), data = crimes.data)
#lm3 <- lm(crimes~1+area+density+area:density, data = crimes.data)
#lm2 <- lm(crimes~(1+prbarr+prbpris)^2, data = crimes.data)
#lm1 <- lm(crimes~1+prbarr:prbpris, data = crimes.data)
mPrbarr <- glm(normY~(1+prbarr), data = crimes.data)
mPrbpris <- glm(normY~(1+prbpris), data = crimes.data)
mPolpc <- glm(normY~(1+prbpris), data = crimes.data)
mDensity <- glm(normY~(1+density), data = crimes.data)
mArea <- glm(normY~(1+area), data = crimes.data)
mTaxpc <- glm(normY~(1+taxpc), data = crimes.data)
mRegion <- glm(normY~(1+region), data = crimes.data)
mPctmin <- glm(normY~(1+pctmin), data = crimes.data)
mPctymale <- glm(normY~(1+pctymale), data = crimes.data)
mWcon <- glm(normY~(1+wcon), data = crimes.data)
mWsta <- glm(normY~(1+wsta), data = crimes.data)
mWser <- glm(normY~(1+wser), data = crimes.data)
mWtrd <- glm(normY~(1+wtrd), data = crimes.data)
mWfir <- glm(normY~(1+wfir), data = crimes.data)
# schätzung des prognosefehlers
SPSE1 <- SPSE1 + sum((crimes.test$crimes - predict(lm1, newdata=crimes.test))^2)
SPSE2 <- SPSE2 + sum((crimes.test$crimes - predict(lm2, newdata=crimes.test))^2)
SPSE3 <- SPSE3 + sum((crimes.test$crimes - predict(lm3, newdata=crimes.test))^2)
SPSE4 <- SPSE4 + sum((crimes.test$crimes - predict(lm4, newdata=crimes.test))^2)
SPSE5 <- SPSE5 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE6 <- SPSE6 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE7 <- SPSE7 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE8 <- SPSE8 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE9 <- SPSE9 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE10 <- SPSE10 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE11 <- SPSE11 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE12 <- SPSE12 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE13 <- SPSE13 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE14 <- SPSE14 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
}
#divisor <- 10000
#SPSE1 <- SPSE1/divisor
#SPSE2 <- SPSE1/divisor
#SPSE3 <- SPSE1/divisor
#SPSE4 <- SPSE1/divisor
#SPSE5 <- SPSE1/divisor
#SPSE6 <- SPSE1/divisor
#SPSE7 <- SPSE1/divisor
#SPSE8 <- SPSE1/divisor
#SPSE9 <- SPSE1/divisor
#SPSE10 <- SPSE1/divisor
#SPSE11 <- SPSE1/divisor
#SPSE12 <- SPSE1/divisor
#SPSE13 <- SPSE1/divisor
#SPSE14 <- SPSE1/divisor
#cbind(SPSE1, SPSE2, SPSE3, SPSE4, SPSE5, SPSE6, SPSE7, SPSE8, SPSE9, SPSE10, SPSE11, SPSE12, SPSE13, SPSE14,
#      min(SPSE1, SPSE2, SPSE3, SPSE4, SPSE5, SPSE6, SPSE7, SPSE8, SPSE9, SPSE10, SPSE11, SPSE12, SPSE13, SPSE14))
cbind(SPSE1, SPSE2, SPSE3, SPSE4, SPSE5, SPSE6, SPSE7, SPSE8, SPSE9, SPSE10, SPSE11, SPSE12, SPSE13, SPSE14)
}
cross_validation()
cv <- cross_validation(); order(cv)
plot(cross_validation())
#1,10, => 3
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
order(cbind(SPSE1, SPSE2, SPSE3, SPSE4, SPSE5, SPSE6, SPSE7, SPSE8, SPSE9, SPSE10, SPSE11, SPSE12, SPSE13, SPSE14))
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
cross_validation()
cross_validation(100)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
cross_validation()
plot(2118963611, 2009172878, 113499404, 3007730646, 3007635543, 3007635543, 3007635543, 3007635543, 3007635543, 3007635543)
plot(2118963611, 2009172878, 113499404, 3007730646)
plot(211.8963611, 200.9172878, 113.499404, 300.7730646)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
cross_validation(1000)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
cv
plot(cv)
plot(allA$AIC)
allB <- BIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir)
allB
plot(allB$BIC)
step(mLohn, ~(1+wcon+wsta+wser+wtrd+wfir))
AIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir,
mLohn, m5, m5T, mRegionI)
aics <- AIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir,
mLohn, m5, m5T, mRegionI)
plot(aics$AIC)
aics <- AIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir,
mLohn, m5, m5T)
plot(aics$AIC)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
cross_validation_singles()
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
cross_validation_singles()
AIC(mLohn)
mLohn <- glm(normY~(1+wcon+wsta+wser+wtrd+wfir), data = crimes.data, family = poisson(link="log"))
mLohn <- glm(normY~(1+wcon+wsta+wser+wtrd+wfir), data = crimes.data)
plot(mLohn, which = 1)
AIC(mLohn)
AIC(m5)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
cvs <- cbind(cross_validation(mPrbarr), cross_validation(mPrbpris))
cross_validation(mPrbarr)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/cross_validation.R', echo=TRUE)
plot(cv(mPrbarr), cv(mPrbpris), cv(mPolpc), cv(mDensity), cv(mArea))
cbind(cv(mPrbarr), cv(mPrbpris), cv(mPolpc), cv(mDensity), cv(mArea))
cbind(cv(mPrbarr), cv(mPrbpris), cv(mPolpc), cv(mDensity), cv(mArea),
cv(mTaxpc), cv(mRegion), cv(mPctmin), cv(mPctymale),
cv(mWcon), cv(mWsta), cv(mWser), cv(mWtrd), cv(mWfir),
cv(mLohn), cv(m5), cv(m5T))
cvs <- cbind(cv(mPrbarr), cv(mPrbpris), cv(mPolpc), cv(mDensity), cv(mArea),
cv(mTaxpc), cv(mRegion), cv(mPctmin), cv(mPctymale),
cv(mWcon), cv(mWsta), cv(mWser), cv(mWtrd), cv(mWfir),
cv(mLohn), cv(m5), cv(m5T))
plot(order(cvs))
plot(aics)
plot(order(aics))
plot(aics$AIC)
plot(cvs)
plot(cvs[,1])
plot(cvs[1,])
plot(order(aics))
plot(aics)
plot(aics$AIC)
plot(order(aics$AIC))
plot(order(cvs[1,]))
cvs[1,]
order(cvs[1,])
order(aics$AIC)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/testing.R', echo=TRUE)
setwd(dir = "~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/")
crimes.data <- read.csv("crimes.csv")
head(crimes.data)
plot(crimes.data$crimes~crimes.data$prbarr)
plot(crimes.data$crimes, crimes.data$prbarr)
cpa <- crimes.data$crimes/crimes.data$area # crimes per area
m0 <- glm(crimes~1+prbarr, data = crimes.data)
plot(m0)
mAll2 <- glm((crimes~(1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir)^2), data = crimes.data)
plot(mAll2)
anova(m0, mAll, test = "LRT")
AIC(m0, mAll)
m1 <- glm(crimes~1+prbarr:prbpris, data = crimes.data)
plot(m1)
m2 <- glm(crimes~(1+prbarr+prbpris)^2, data = crimes.data)
add1(m2, prbarr)
AIC(m0, mAll, mAll2, m1, m2)
BIC(m0, mAll, mAll2, m1, m2)
?AIC
mTrade <- glm(crimes~(1+wsta+wser+wtrd+wfir)^2, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade)
plot(mTrade, which = 1)
plot(crimes.data$crimes, crimes.data$prbarr)
plot(crimes.data$crimes, crimes.data$prbpris)
mArrest <- glm(crimes~(1+prbarr), data = crimes.data)
plot(mArrest, which = 1)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest)
add1(mArrest, scope = ~(1+crimes.data$prbarr))
maxY <- max(crimes.data$crimes)
maxY
normY <- crimes.data$crimes/maxY
normY
plot(normY, crimes.data$prbarr)
mArrestNorm <- glm(normY~(1+prbarr), data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm)
mArea <- glm(crimes~1+area, data = crimes.data)
plot(mArea, which = 1)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea)
plot(crimes.data$crimes, crimes.data$area)
# wtf: the smaller the area the more crimes?
plot(crimes.data$crimes, crimes.data$density)
mDensity <- glm(crimes~1+density, data = crimes.data)
plot(mDensity, which = 1)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity)
m3 <- glm(crimes~1+area+density+area:density, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3)
# crimes~1+area+density+area:density => 1549
# cpa~1+area:density => 581
# cpa~1+area+density+area:density => 426. bis jetzt beste!
plot(m3, which = 1)
coef(m3)
?coef
m3Wcon <- glm(crimes~1+area+density+area:density+wcon, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wcon)
m3Wsta <- glm(crimes~1+area+density+area:density+wsta, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wsta)
m3Wser <- glm(crimes~1+area+density+area:density+wser, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wser)
# klein wenig besser
m3Wtrd <- glm(crimes~1+area+density+area:density+wtrd, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wtrd)
m3Wfir <- glm(crimes~1+area+density+area:density+wfir, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wfir)
plot(crimes.data$crimes, crimes.data$area)
plot(crimes.data$crimes, crimes.data$region)
m4 <- glm(normY~(1+prbarr+region), data = crimes.data)
AIC(m4)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wfir, m4)
m4Wfir <- glm(normY~(1+prbarr+region+area+density+area:density+wfir), data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wfir, m4, m4Wfir)
anova(mDensity, m3, m3Wfir, m4, m4Wfir)
m4Wfir <- glm(normY~(1+prbarr+region+area+density+area:density+wfir), data = crimes.data, family = poisson)
m4Wfir2 <- glm(normY~(1+prbarr+region+area+density+area:density+wfir), data = crimes.data, family = binomial)
BIC(m4Wfir, m4Wfir2)
# single models #
mPrbarr <- glm(normY~(1+prbarr), data = crimes.data)
mPrbpris <- glm(normY~(1+prbpris), data = crimes.data)
mPolpc <- glm(normY~(1+prbpris), data = crimes.data)
mDensity <- glm(normY~(1+density), data = crimes.data)
mArea <- glm(normY~(1+area), data = crimes.data)
mTaxpc <- glm(normY~(1+taxpc), data = crimes.data)
mRegion <- glm(normY~(1+region), data = crimes.data)
mPctmin <- glm(normY~(1+pctmin), data = crimes.data)
mPctymale <- glm(normY~(1+pctymale), data = crimes.data)
mWcon <- glm(normY~(1+wcon), data = crimes.data)
mWsta <- glm(normY~(1+wsta), data = crimes.data)
mWser <- glm(normY~(1+wser), data = crimes.data)
mWtrd <- glm(normY~(1+wtrd), data = crimes.data)
mWfir <- glm(normY~(1+wfir), data = crimes.data)
allA <- AIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir)
allA
plot(allA$AIC)
allB <- BIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir)
allB
plot(allB$BIC)
mLohn <- glm(normY~(1+wcon+wsta+wser+wtrd+wfir), data = crimes.data)
plot(mLohn, which = 1)
AIC(mLohn)
BIC(mLohn)
anova(mLohn)
step(mLohn, ~(1+wcon+wsta+wser+wtrd+wfir))
m5 <- glm(normY~(1+prbarr+region+area+density+area:density+wcon+wsta+wser+wtrd+wfir), data = crimes.data, family = binomial)
plot(m5, which = 1)
AIC(m5)
BIC(m5)
anova(m5)
summary(m5)
m5T <- glm(normY~(1+prbarr+region+area+density+wcon+wsta+wser+wtrd+wfir), data = crimes.data, family = binomial)
AIC(m5T)
BIC(m5T)
anova(m5T)
summary(m5T)
coef(m5T)
mRegionI <- glm(crimes ~ density + prbarr:region + prbpris:region + prbpris:region
+ prbpris:region + polpc:region + density:region
+ area:region + taxpc:region + region:pctmin
+ region:pctymale + region:wcon,
data = crimes.data)
aics <- AIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale,
mWcon, mWsta, mWser, mWtrd, mWfir,
mLohn, m5, m5T)
plot(aics$AIC)
cvs <- cbind(cv(mPrbarr), cv(mPrbpris), cv(mPolpc), cv(mDensity), cv(mArea),
cv(mTaxpc), cv(mRegion), cv(mPctmin), cv(mPctymale),
cv(mWcon), cv(mWsta), cv(mWser), cv(mWtrd), cv(mWfir),
cv(mLohn), cv(m5), cv(m5T))
plot(order(cvs[1,]))
order(cvs[1,])
plot(order(aics$AIC))
order(aics$AIC)
