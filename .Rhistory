plot(s, pnorm(s, 0, sd = sqrt(var(r))), type = "l", col = "red")
par(mfrow=c(1,1))
}
residuals_(simple.model, "simple model")
residuals_(location.model, "location model")
residuals_(year.model, "simple model")
residuals_(rooms.model, "rooms model")
residuals_(simple.model, "simple model")
residuals_ <- function(model, label) {
r <- residuals(model)
plot.new()
frame()
par(mfrow=c(2,1))
hist(r, freq = FALSE, xlab="residuals")
title(main = title)
s <- seq(round(min(r)), round(max(r)), length.out = 100)
plot(s, pnorm(s, 0, sd = sqrt(var(r))), type = "l", col = "red")
par(mfrow=c(1,1))
}
residuals_(simple.model, "simple model")
residuals_(location.model, "location model")
residuals_(year.model, "simple model")
residuals_(rooms.model, "rooms model")
plot(cars, main = "") # here, could use main directly
title(main = "Stopping Distance versus Speed")
residuals_ <- function(model, label) {
r <- residuals(model)
plot.new()
frame()
par(mfrow=c(2,1))
hist(r, freq = FALSE, xlab="residuals")
#title(main = title)
s <- seq(round(min(r)), round(max(r)), length.out = 100)
plot(s, pnorm(s, 0, sd = sqrt(var(r))), type = "l", col = "red")
title(main = title)
par(mfrow=c(1,1))
}
residuals_(simple.model, "simple model")
residuals_(location.model, "location model")
residuals_(year.model, "simple model")
residuals_(rooms.model, "rooms model")
mlEstimator <- function(X, bHat) {
n <- length(x)
sigma.hat.q <- (1/n)*(t(miete.data$mieteqm - X %*% bHat)%*%miete.data$mieteqm - X%*%bHat)
d <- dim(X)[2]
sigma.tilde.q <- 1/(n - (k+1))*sigma.hat.q
return(c(sigma.hat.q[1], sigma.tilde.q[1]))
}
X <- cbind(1, x)
simple <- mlEstimator(X, c(simple.model$coefficients))
MLSig = function(X, b_hat)
{
n = length(miete_data$flaeche)
sig_hat_q = 1/n * t(miete_data$mieteqm - X%*%b_hat) %*% (miete_data$mieteqm - X%*%b_hat)
k = dim(X)[2]
sig_tilde_q = 1 / (n - (k+1)) * sig_hat_q
return(c(sig_hat_q[1], sig_tilde_q[1]))
}
mlEstimator = function(X, bHat) {
sigma.hat.q <- 1/length(miete.data$flaeche) * t(miete.data$mieteqm - X%*%b_hat) %*% (miete.data$mieteqm - X%*%b_hat)
sigma.tilde.q = 1 / (n - (dim(X)[2]+1)) * sigma.hat.q
return(c(sigma.hat.q[1], sigma.tilde.q[1]))
}
X <- cbind(1, x)
simple <- mlEstimator(X, c(simple.model$coefficients))
mlEstimator = function(X, bHat) {
sigma.hat.q <- 1/length(miete.data$flaeche) * t(miete.data$mieteqm - X%*%bHat) %*% (miete.data$mieteqm - X%*%b_hat)
sigma.tilde.q = 1 / (n - (dim(X)[2]+1)) * sigma.hat.q
return(c(sigma.hat.q[1], sigma.tilde.q[1]))
}
X <- cbind(1, x)
simple <- mlEstimator(X, c(simple.model$coefficients))
mlEstimator = function(X, bHat) {
sigma.hat.q <- 1/length(miete.data$flaeche) * t(miete.data$mieteqm - X%*%bHat) %*% (miete.data$mieteqm - X%*%bHat)
sigma.tilde.q = 1 / (n - (dim(X)[2]+1)) * sigma.hat.q
return(c(sigma.hat.q[1], sigma.tilde.q[1]))
}
X <- cbind(1, x)
simple <- mlEstimator(X, c(simple.model$coefficients))
simple
location.m <- cbind(1, x, miete.data$lage==2, miete.data$lage==3)
location.f <- mlEstimator(location.m, c(model.lage$coefficients))
location.m <- cbind(1, x, miete.data$lage==2, miete.data$lage==3)
location.f <- mlEstimator(location.m, c(location.model$coefficients))
rooms.m <- cbind(1, miete.data$lage==2, miete.data$lage==3, miete.data$bad, miete.data$zh, x*z)
rooms.f <- mlEstimator(rooms.m, c(rooms.model$coefficients))
rooms.m
rooms.f
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/Übungen/vS/Übung 4/uebung4.R', echo=TRUE)
simple.model <- predict(simple.model, newdata = data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
simple.g <- predict(simple.model, newdata = data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0)
data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0) -> a
predict(simple.model, newdata = a)
head(simple.data)
head(simple.model)
location.g <- predict(location.model, newdata = data.frame(flaeche2=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
predict(simple.model)
predict(simple.model, newdata = data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
miete.data
predict(simple.model, newdata = data.frame(100, 1950, 3, 1, 1, 0))
predict(data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
predict(data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))simple.g <- predict(as.numeric(simple.model),
newdata = data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
simple.g <- predict(as.numeric(simple.model),
newdata = data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
predict(as.numeric(simple.model),
newdata = data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
typeof(simple.model)
as.numeric(simple.model)
simple.g <- predict(simple.model,
newdata = data.frame(x=as.double(1/100),
bjahr=as.double(1950),
lage=as.double(3),
zh=as.double(1), bad=as.double(1), kueche=as.double(0)))
simple.g <- predict(simple.model,
data = data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0)->a
typeof(a)
a
a$x
a$x->a
typeof(a)
typeof(simple.model)
year.g <- predict(year.model,
data = data.frame(x=1/100, z=1950^2, lage=3, zh=1, bad=1, kueche=0))
year.g
simple.g <- predict(simple.model,
data = data.frame(x=1/100, bjahr=1950^2, lage=3, zh=1, bad=1, kueche=0))
location.g <- predict(location.model,
data = data.frame(x=1/100, bjahr=1950^2, lage=3, zh=1, bad=1, kueche=0))
year.g <- predict(year.model,
data = data.frame(x=1/100, z=1950^2, lage=3, zh=1, bad=1, kueche=0))
rooms.g <- predict(rooms.model,
data = data.frame(x=1/100, z=1950^2, lage=3, zh=1, bad=1, kueche=0))
simple.g <- predict(simple.model,
data = data.frame(x=1/100, bjahr=as.double(1950), lage=3, zh=1, bad=1, kueche=0))
1950^2
typeof(1950^2)
typeof(1950)
simple.g <- predict(simple.model,
data = data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
ocation.g <- predict(location.model,
data = data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
location.g <- predict(location.model,
data = data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
year.g <- predict(year.model,
data = data.frame(x=1/100, z=1950^2, lage=3, zh=1, bad=1, kueche=0))
rooms.g <- predict(rooms.model,
data = data.frame(x=1/100, z=1950^2, lage=3, zh=1, bad=1, kueche=0))
simple.model <- lm(y~x)
simple.g <- predict(simple.model,
data = data.frame(x=1/100, bjahr=1950, lage=3, zh=1, bad=1, kueche=0))
bloodPressure.data <- read.csv('bloopdpressure.csv', sep = ';')
read.csv('bloodpressure.csv', sep = ';')
plot(1:10)
bloodPressure.data <- read.csv('bloodpressure.csv', sep = ';')
bloodPressure.data -> bP.data
bP.data
bP.model <- lm(bp~age, data = bP.data)
bP.model
bP.pred <- predict(bP.model)
points(bP.data$age, bP.pred, col=3)
X <- cbind(1, c(out[1]))
X
X <- cbind(1, c(out[1]))
out = split(bP.data, cut(bP.data$age, c(20,25,30,35,40,45,50,55,60), include.lowest = TRUE));
out
X <- cbind(1, c(out[1]))
bP.model[['coefficients']]
mlEstimator2 <- function(X, Y, bHat) {
sigma.hat.q   <- 1/dim(X)[1] * t(Y - X%*%bHat) %*% (Y - X%*%bHat)
sigma.tilde.q <- 1 / (dim(X)[1] - (dim(X)[2]+1)) * sigma.hat.q
return(c(sigma.hat.q[1], sigma.tilde.q[1]))
}
names(out)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/Übungen/vS/Übung 4/uebung4.R', echo=TRUE)
bP.model <- lm(bp~age, data = bP.data)
bP.pred <- predict(bP.model)
bP.pred
out <- split(bP.data, cut(bP.data$age, c(20,25,30,35,40,45,50,55,60), include.lowest = T));
X <- cbind(1, c(out[1]))
bP.model[['coefficients']]
mlEstimator2 <- function(X, Y, bHat) {
sigma.hat.q   <- 1/dim(X)[1] * t(Y - X%*%bHat) %*% (Y - X%*%bHat)
sigma.tilde.q <- 1 / (dim(X)[1] - (dim(X)[2]+1)) * sigma.hat.q
return(c(sigma.hat.q[1], sigma.tilde.q[1]))
}
vars.tilde <- rep(0, length(out))
i <- 0
for (n in names(out)) {
i <- i +1
R <- MLSig(cbind(1, out[[n]]$age), out[[n]]$bp, bP.model$coefficients)
vars.tilde[i] = R[2]
return(vars.tilde)
}
bP.model <- lm(bp~age, data = bP.data)
bP.pred <- predict(bP.model)
bP.pred
out <- split(bP.data, cut(bP.data$age, c(20,25,30,35,40,45,50,55,60), include.lowest = T));
X <- cbind(1, c(out[1]))
bP.model[['coefficients']]
mlEstimator2 <- function(X, Y, bHat) {
sigma.hat.q   <- 1/dim(X)[1] * t(Y - X%*%bHat) %*% (Y - X%*%bHat)
sigma.tilde.q <- 1 / (dim(X)[1] - (dim(X)[2]+1)) * sigma.hat.q
return(c(sigma.hat.q[1], sigma.tilde.q[1]))
}
vars.tilde <- rep(0, length(out))
i <- 0
for (n in names(out)) {
i <- i +1
R <- mlEstimator2(cbind(1, out[[n]]$age), out[[n]]$bp, bP.model$coefficients)
vars.tilde[i] = R[2]
return(vars.tilde)
}
for (n in names(out)) {
i <- i +1
R <- mlEstimator2(cbind(1, out[[n]]$age), out[[n]]$bp, bP.model$coefficients)
vars.tilde[i] = R[2]
return(vars.tilde)
}
bP.model <- lm(bp~age, data = bP.data)
bP.pred <- predict(bP.model)
bP.pred
out <- split(bP.data, cut(bP.data$age, c(20,25,30,35,40,45,50,55,60), include.lowest = T));
X <- cbind(1, c(out[1]))
bP.model[['coefficients']]
mlEstimator2 <- function(X, Y, bHat) {
sigma.hat.q   <- 1/dim(X)[1] * t(Y - X%*%bHat) %*% (Y - X%*%bHat)
sigma.tilde.q <- 1 / (dim(X)[1] - (dim(X)[2]+1)) * sigma.hat.q
return(c(sigma.hat.q[1], sigma.tilde.q[1]))
}
vars.tilde <- rep(0, length(out))
i <- 0
for (n in names(out)) {
i <- i +1
R <- mlEstimator2(cbind(1, out[[n]]$age), out[[n]]$bp, bP.model$coefficients)
vars.tilde[i] = R[2]
}
vars.tilde
bP.model <- lm(bp~age, data = bP.data)
bP.pred <- predict(bP.model)
bP.pred
out <- split(bP.data, cut(bP.data$age, c(20,25,30,35,40,45,50,55,60), include.lowest = T));
X <- cbind(1, c(out[1]))
bP.model[['coefficients']]
mlEstimator2 <- function(X, Y, bHat) {
sigma.hat.q   <- 1/dim(X)[1] * t(Y - X%*%bHat) %*% (Y - X%*%bHat)
sigma.tilde.q <- 1 / (dim(X)[1] - (dim(X)[2]+1)) * sigma.hat.q
return(c(sigma.hat.q[1], sigma.tilde.q[1]))
}
vars.tilde <- rep(0, length(out))
i <- 0
for (n in names(out)) {
i <- i +1
R <- mlEstimator2(cbind(1, out[[n]]$age), out[[n]]$bp, bP.model$coefficients)
vars.tilde[i] = R[2]
}
vars.tilde
x <- 1/miete.data$flaeche
y <- miete.data$mieteqm
z <- miete.data$bjahr^2
simple.model <- lm(y~x)
simple.pred <- predict(simple.model)
simple.model <- lm(y~x)
# anwendung von predict
simple.pred <- predict(simple.model)
## a)
simple.beta0.hat <- simple.model$coefficients[[1]]
simple.beta1.hat <- simple.model$coefficients[[2]]
simple.beta0.hat
simple.beta1.hat
head(simple.m)
head(years.m)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/Übungen/vS/Übung 4/uebung4.R', echo=TRUE)
bP.model <- lm(bp~age, data = bP.data)
bP.pred <- predict(bP.model)
bP.pred
# anlegen der altersintervalle
out <- split(bP.data, cut(bP.data$age, c(20,25,30,35,40,45,50,55,60), include.lowest = T));
X <- cbind(1, c(out[1]))
bP.model[['coefficients']]
# anpassung der funktion von oben
mlEstimator2 <- function(X, Y, bHat) {
sigma.hat.q   <- 1/dim(X)[1] * t(Y - X%*%bHat) %*% (Y - X%*%bHat)
sigma.tilde.q <- 1 / (dim(X)[1] - (dim(X)[2]+1)) * sigma.hat.q
return(c(sigma.hat.q[1], sigma.tilde.q[1]))
}
vars.tilde <- rep(0, length(out))
i <- 0
for (n in names(out)) {
i <- i +1
R <- mlEstimator2(cbind(1, out[[n]]$age), out[[n]]$bp, bP.model$coefficients)
vars.tilde[i] = R[2]
}
vars.tilde
mAll2 <- glm(crimes~(1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir)^2, data = crimes.data)
crimes.data <- read.csv("crimes.csv")
setwd("Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/")
crimes.data <- read.csv("crimes.csv")
plot(crimes~prbarr)
plot(crimes~prbarr)
crimes.data <- read.csv("crimes.csv")
m0 <- glm(crimes~1+prbarr, data = crimes.data)
plot(m0)
AIC(m0, mAll, m1)
mAll <- glm(crimes~1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir, data = crimes.data)
plot(mAll)
anova(m0, mAll, test = "LRT")
mAll2 <- glm(crimes~(1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir)^2, data = crimes.data)
add1(mAll2, scope = ~(1+prbarr+prbpris+polpc+density+area+taxpc))
summary(mAll)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/Übungen/vS/Übung 7/mitschrift_300118.R', echo=TRUE)
setwd("../../Übungen/vS/Übung 7/")
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/Übungen/vS/Übung 7/mitschrift_300118.R', echo=TRUE)
setwd(dir = "~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/")
head(crimes.data)
add1(m1, scope = ~(1+prbarr+prbpris+polpc+density+area+taxpc)^2)
m2 <- glm(crimes~(1+prbarr+prbpris)^2)
m2 <- glm(crimes~(1+prbarr+prbpris)^2, data = crimes.data)
add1(m2, scope = ~(1+prbarr+prbpris)^2)
add1(m2, scope = ~1+prbarr+prbpris)
add1(m2, scope = ~prbarr+prbpris)
add1(m2, prbarr)
AIC(m0, mAll, m1, m2)
m0 <- glm(crimes~1+prbarr, data = crimes.data)
mAll <- glm(crimes~1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir, data = crimes.data)
m1 <- glm(crimes~1+prbarr:prbpris, data = crimes.data)
mAll2 <- glm(crimes~(1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir)^2, data = crimes.data)
m2 <- glm(crimes~(1+prbarr+prbpris)^2, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2)
?AIC
BIC(m0, mAll, mAll2, m1, m2)
mTrade <- glm(crimes~(1+wsta+wser+wtrd+wfir)^2)
mTrade <- glm(crimes~(1+wsta+wser+wtrd+wfir)^2, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade)
plot(mTrade, which = 1)
crimes.data$crimes
plot(crimes.data$crimes)
plot(crimes.data$crimes, crimes.data$prbarr)
plot(crimes.data$crimes, crimes.data$prbpris)
mArrest <- glm(crimes~(1+brparr))
mArrest <- glm(crimes~(1+brparr), data = crimes.data)
mArrest <- glm(crimes~(1+brbarr), data = crimes.data)
mArrest <- glm(crimes~(1+prbarr), data = crimes.data)
plot(mArrest, which = 1)
AIC(m0, mAll, mAll2, m1, m2, mArrest)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest)
add1(mArrest, scope = ~(1+wsta+wser+wtrd+wfir))
add1(mArrest, scope = ~(1+wsta+wser+wtrd+wfir)^2)
add1(mArrest, scope = ~(1+prbarr))
add1(mArrest, scope = ~(1+crimes.data$prbarr))
mArrest <- glm(crimes~(1+prbarr), family = binomial, data = crimes.data)
maxY <- max(crimes.data$crimes)
maxY
normY <- crimes.data$crimes/maxY
normY
plot(normY, crimes.data$prbarr)
mArrest <- glm(normY~(1+prbarr), family = binomial, data = crimes.data)
mArrest <- glm(normY~(1+prbarr), data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm)
mArrestNorm <- glm(normY~(1+prbarr), data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm)
?glm
mArrest <- glm(crimes~(1+prbarr), family = gaussian, data = crimes.data)
add1(mArrest, scope = ~(1+crimes.data$prbarr))
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm)
mArrest <- glm(crimes~(1+prbarr), family = Gamma, data = crimes.data)
mArrest <- glm(crimes~(1+prbarr), family = Gamma(link=inverse), data = crimes.data)
mArrest <- glm(crimes~(1+prbarr), family = gaussian, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm)
mArrest <- glm(crimes~(1+prbarr), family = poisson, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm)
mArrest <- glm(crimes~(1+prbarr), data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm)
crimes.data$area
head(crimes.data)
mArea <- glm(crimes~1+area, data = crimes.data)
plot(mArea, which = 1)
cpa <- crimes.data$crimes/crimes.data$area # crimes per area
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea)
mAll3 <- glm(cpa~(1+prbarr+prbpris+polpc+density+area+taxpc+region+pctmin+pctymale+wcon+wsta+wser+wtrd+wfir)^2, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mAll3)
setwd(dir = "~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/")
crimes.data <- read.csv("crimes.csv")
head(crimes.data)
plot(crimes~prbarr)
plot(crimes.data$crimes, crimes.data$prbarr)
cpa <- crimes.data$crimes/crimes.data$area # crimes per area
m0 <- glm(cpa~1+prbarr, data = crimes.data)
plot(m0)
anova(m0, mAll, test = "LRT")
AIC(m0, mAll)
m1 <- glm(cpa~1+prbarr:prbpris, data = crimes.data)
plot(m1)
m2 <- glm(cpa~(1+prbarr+prbpris)^2, data = crimes.data)
add1(m2, prbarr)
AIC(m0, mAll, mAll2, m1, m2)
BIC(m0, mAll, mAll2, m1, m2)
?AIC
mTrade <- glm(cpa~(1+wsta+wser+wtrd+wfir)^2, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade)
plot(mTrade, which = 1)
plot(crimes.data$crimes, crimes.data$prbarr)
plot(crimes.data$crimes, crimes.data$prbpris)
mArrest <- glm(cpa~(1+prbarr), data = crimes.data)
plot(mArrest, which = 1)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest)
add1(mArrest, scope = ~(1+crimes.data$prbarr))
maxY <- max(crimes.data$crimes)
maxY
normY <- crimes.data$crimes/maxY
normY
plot(normY, crimes.data$prbarr)
mArrestNorm <- glm(normY~(1+prbarr), data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm)
mArea <- glm(cpa~1+area, data = crimes.data)
plot(mArea, which = 1)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea)
plot(crimes.data$crimes, crimes.data$area)
plot(crimes.data$crimes, crimes.data$density)
mDensity <- glm(cpa~1+density, data = crimes.data)
plot(mDensity, which = 1)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity)
m3 <- glm(cpa~1+density, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3)
m3 <- glm(crimes~1+area:density, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3)
m3 <- glm(crimes~1+area+density+area:density, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3)
m3 <- glm(crimes~1+area:density, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3)
m3 <- glm(cpa~1+area:density, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3)
m3 <- glm(cpa~1+area+density+area:density, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3)
plot(m3, which = 1)
coef(m3)
?coef
m3Wcon <- glm(cpa~1+area+density+area:density+wcon, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wcon)
m3Wsta <- glm(cpa~1+area+density+area:density+wsta, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wsta)
m3Wser <- glm(cpa~1+area+density+area:density+wser, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wser)
m3Wtrd <- glm(cpa~1+area+density+area:density+wtrd, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3trd)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3trd)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wtrd)
m3Wfir <- glm(cpa~1+area+density+area:density+wfir, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3fir)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wfir)
setwd("~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes")
plot(crimes~prbarr)
head(crimes.data)
plot(crimes.data$crimes~crimes.data$prbarr)
plot(crimes.data$crimes, crimes.data$prbarr)
plot(crimes.data$crimes~crimes.data$prbarr)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/testing.R', echo=TRUE)
crimes.data$region
crimes.data.west <- crimes.data$region == west
crimes.data.west <- crimes.data$region == 'west'
crimes.data.west
crimes.data.west <- c()
for(data in crimes.data) {
if(data$region == 'west') {
crimes.data.west <- data;
}
}
for(data in crimes.data) {
data
}
crimes.data
crimes.data$region
plot(mAll)
crimes.data$area == west
crimes.data$area == 'west'
crimes.data$region == 'west'
typeof(crimes.data)
?which
which(crimes.data$region="west")
which(crimes.data$region=="west")
crimes.data.west <- crimes.data[crimes.data$region == "west", ]
crimes.data.west
crimes.data.central <- crimes.data[crimes.data$region == "central", ]
crimes.data.other <- crimes.data[crimes.data$region == "other", ]
?as.factor
plot(crimes.data$crimes, crimes.data$area)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wfir)
plot(crimes.data$crimes, as.factor(crimes.data$region))
plot(crimes.data$crimes, crimes.data$region)
plot(crimes.data$crimes, crimes.data$density)
source('~/Dokumente/Master/3. Fachsemester/statistische Verfahren/WS 17⁄18/projekt/crimes/testing.R', echo=TRUE)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity)
mDensity <- glm(crimes~1+density, data = crimes.data)
m3 <- glm(crimes~1+area+density+area:density, data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3)
?AIC
plot(normY, crimes.data$prbarr)
m4 <- glm(normY~(1+prbarr+region), data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, m4)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wfir, m4)
m4Wfir <- glm(normY~(1+prbarr+region+area+density+area:density+wfir), data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wfir, m4, m4Wfir)
?anova
anova(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wfir, m4, m4Wfir, test = "LRT")
anova(mDensity, m3, m3Wfir, m4, m4Wfir, test = "LRT")
m4 <- glm(cpa~(1+prbarr+region), data = crimes.data)
m4Wfir <- glm(cpa~(1+prbarr+region+area+density+area:density+wfir), data = crimes.data)
AIC(m0, mAll, mAll2, m1, m2, mTrade, mArrest, mArrestNorm, mArea, mDensity, m3, m3Wfir, m4, m4Wfir)
anova(mDensity, m3, m3Wfir, m4, m4Wfir, test = "LRT")
anova(mDensity, m3, m3Wfir, m4, m4Wfir)
