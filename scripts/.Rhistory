mPrbarr <- glm.nb(crimes~(1+prbarr), data = crimes.data)
mPrbpris <- glm.nb(crimes~(1+prbpris), data = crimes.data)
mPolpc <- glm.nb(crimes~(1+prbpris), data = crimes.data)
mDensity <- glm.nb(crimes~(1+density), data = crimes.data)
mArea <- glm.nb(crimes~(1+area), data = crimes.data)
mTaxpc <- glm.nb(crimes~(1+taxpc), data = crimes.data)
mRegion <- glm.nb(crimes~(1+region), data = crimes.data)
mPctmin <- glm.nb(crimes~(1+pctmin), data = crimes.data)
mPctymale <- glm.nb(crimes~(1+pctymale), data = crimes.data)
mWcon <- glm.nb(crimes~(1+wcon), data = crimes.data)
mWsta <- glm.nb(crimes~(1+wsta), data = crimes.data)
mWser <- glm.nb(crimes~(1+wser), data = crimes.data)
mWtrd <- glm.nb(crimes~(1+wtrd), data = crimes.data)
mWfir <- glm.nb(crimes~(1+wfir), data = crimes.data)
# vergleiche modelle
allA <- AIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir)
allA
plot(allA$AIC)
allB <- BIC(mPrbarr, mPrbpris, mPolpc, mDensity, mArea,
mTaxpc, mRegion, mPctmin, mPctymale, mWcon, mWsta, mWser, mWtrd, mWfir)
allB
plot(allB$BIC)
allCV <- cbind(cv(mPrbarr), cv(mPrbpris), cv(mPolpc), cv(mDensity), cv(mArea),
cv(mTaxpc), cv(mRegion), cv(mPctmin), cv(mPctymale), cv(mWcon), cv(mWsta),
cv(mWser), cv(mWtrd), cv(mWfir))
allCV
plot(allCV[1,])
mSingles <- glm.nb(crimes~(1+density+wsta+wser+wtrd+wfir), data = crimes.data)
plot(mSingles, which = 1)
AIC(mSingles)
step(mSingles, ~(1+density+wsta+wser+wtrd+wfir)^2)
mSinglesOpt <- glm.nb(formula = crimes ~ density + wser + wtrd + wfir + wser:wtrd +
density:wser, data = crimes.data, init.theta = 2.993441708,
link = log)
plot(mSinglesOpt, which = 1)
cv(mSinglesOpt); cv(mR);
AIC(mSinglesOpt, m3O2, mR)
# aic-werte liegen wesentlich näher aneinander als cv-werte.
######### ermitteltes modell: mSinglesOpt
### (aber gar nicht gut)
mSinglesOpt
require(MASS)
pseudo.data1 <- rnegbin(90, mu = predict(mStep, type = "response"),
theta = 0.7566)
#require(MASS)
# die drei 'siegermodelle':
## durch probieren
m1 <- glm.nb(formula = crimes ~ area + density + wser + prbarr + region +
area:density + density:wser + density:prbarr + wser:prbarr +
area:prbarr + density:region + area:wser, data = crimes.data,
init.theta = 6.810511885, link = log)
# mit step(), dann modellvereinfachung
m2 <- glm.nb(formula = crimes ~ density + area + pctmin + wsta + density:area +
density:pctmin + density:wsta, data = crimes.data, init.theta = 3.416777454,
link = log)
### andere methoden, aber ergebnisse nicht so gut:
# durch Überprüfen der einzelnen Werte als modell (aic und cv)
m3 <- glm.nb(formula = crimes ~ density + wser + wtrd + wfir + wser:wtrd +
density:wser, data = crimes.data, init.theta = 2.993441765,
link = log)
# mit hilfe von cor()
m4 <- glm.nb(formula = crimes ~ (density + wser + wfir + wtrd + pctymale),
data = crimes.data,
init.theta = 2.836620662,
link = log)
# stepwise_modelselection
m5 <- glm.nb(formula = crimes ~ (1 + density + area + wtrd + pctmin + prbarr),
data = crimes.data,
init.theta = 3.465133653,
link = log)
cv(m1); cv(m2); cv(m3); cv(m4); cv(m5);
AIC(m1, m2, m3, m4, m5)
### finale auswertung:
aics <- AIC(m1, m2, m3, m4, m5)$AIC
plot(aics)
cvC <- cbind(cv(m1), cv(m2), cv(m3), cv(m4), cv(m5))
cvC <- cvC/max(cvC)
min(cvC)
plot(cvC)
##### gewinner: #####
m2
pseudo.data1 <- rnegbin(90, mu = predict(m1, type = "response"),
theta = 0.7566)
pseudo.data2 <- rpois(90, lambda = predict(m1, type = "response"))
head(pseudo.data)
head(pseudo.data1)
pseudo.data2
plot(pseudo.data2)
plot(crimes~(1+density), data = crimes.data, col = region, pch = 16)
points(crimes.data.west$crimes, pseudoWest.data, col = 10)
crimes.data.west
crimes.data.west <- crimes.data[crimes.data$region == "west"]
plot(crimes.data.west$crimes)
plot(crimes.data.central$crimes)
crimes.data.other <- crimes.data[crimes.data$region == "other", ]
plot(crimes.data.west$crimes)
plot(crimes.data.west$crimes, col = 1)
plot(crimes.data.central$crimes, col = 2)
points(crimes.data.central$crimes, col = 2)
plot(crimes.data.west$crimes, col = 1)
points(crimes.data.central$crimes, col = 2)
points(crimes.data.other$crimes, col = 3)
crimes.data.noWest <- rbind(crimes.data.central, crimes.data.other)
plot(crimes.data.noWest$crimes, col = 2)
plot(mRegion)
plot(crimes.data$crimes)
plot(crimes.data$crimes, crimes.data$density)
crimes.noOutliers <- crimes.data[crimes.data$crimes <= 1000,]
crimes.noOutliers
plot(crimes.noOutliers)
plot(crimes.noOutliers$crimes, crimes.noOutliers$density)
cor(crimes.data$crimes, crimes.data$region)
cor(crimes.data$crimes, as.factor(crimes.data$region))
crimes.rl <- crimes.data # rl: region labeled
for(row in crimes.data) {
if(row$region == "west") {
row$region <- 1
}
if(row$region == "central") {
row$region <- 2
}
if(row$region == "other") {
row$region <- 3
}
}
for(row in crimes.data) {
row
}
for(row in crimes.data) {
print(row)
}
crimes.data[1]
crimes.data[2]
crimes.data
crimes.rl <- crimes.data # rl: region labeled
for(row in crimes.rl) {
if(row[region] == "central"){
row[region] <- 1
}
}
crimes.rl
crimes.rl[region]
crimes.rl[,region]
crimes.rl[region,]
crimes.rl[1]
crimes.rl[2]
crimes.rl[3]
crimes.rl[4]
crimes.rl[5]
crimes.rl[6]
crimes.rl[7]
crimes.rl[8]
for(i in crimes.rl) {
if(i == "central") {
i <- 1
}
}
crimes.rl
crimes.rl[1,1]
crimes.rl[8,]
crimes.rl[,8]
crimes.rl[,crimes.rl$region == "central"] <- 1
crimes.rl[,crimes.rl$region == "central"]
crimes.rl[,region == "central"]
crimes.rl[,8 == "central"]
crimes.rl[,8 == "central"] -> a
a
typeof(crimes.rl)
crimes.data[crimes.data$region == "central", ] <- 1
crimes.data
crimes.rl[crimes.rl$region == "west", ] <- 2
crimes.rl
crimes.rl[1]
crimes.rl[,1]
crimes.rl[1,1]
crimes.rl
crimes.data <- read.csv("crimes.csv")
crimes.rl <- crimes.data # rl: region labeled
crimes.data
crimes.rl <- crimes.data # rl: region labeled
crimes.rl[1,1]
region
crimes.rl$region
crimes.rl[crimes.rl$region == "central",] <- 1
crimes.rö
crimes.rl
length(crimes.data.west)
length(crimes.data.central)
length(crimes.data.central)
length(crimes.data.other)
crimes.data.central <- crimes.data[crimes.data$region == "central", ]
points(crimes.data.central$crimes, col = 2)
length(crimes.data.central) # 16
crimes.data.other <- crimes.data[crimes.data$region == "other", ]
points(crimes.data.other$crimes, col = 3)
length(crimes.data.other)
dim(crimes.data.west) # 16
dim(crimes.data.central) # 16
dim(crimes.data.other)
crimes.data
mean(crimes.data.west$crimes)
median(crimes.data.west$crimes)
crimes.datat.west
crimes.data.west
crimes.data.west[crimes == max(crimes.west.data$crimes),]
crimes.data.west[,crimes == max(crimes.west.data$crimes)]
max(crimes.data.west$crimes)
mean(crimes.data.central$crimes) #1027.381
mean(crimes.data.central$crimes) #4764,882
median(crimes.data.central$crimes) #513
mean(crimes.data.other$crimes) #4764.882
median(crimes.data.other$crimes) #2172
plot(crimes.data.west$crimes, col = 1)
points(crimes.data.central$crimes, col = 2)
points(crimes.data.other$crimes, col = 3)
crimes.data.central <- crimes.data[crimes.data$region == "central", ]
mean(crimes.data.central$crimes) #4764.882
median(crimes.data.central$crimes) #2172
crimes.data.other <- crimes.data[crimes.data$region == "other", ]
dim(crimes.data.other) # 35
mean(crimes.data.other$crimes) #4764.882
median(crimes.data.other$crimes) #1235
typeof(crimes.rl)
crimes.rl$
mDr <- glm.nb(crimes~(density+region), data = crimes.data)
cv(mDr)
### cross validation ###
## compare singles ##
cross_validation_singles <- function(repeats = 10) {
index <- rep(1:7, each = 6)
index <- index[-(dim(crimes.data)[1]+1)]
index <- sample(index)
SPSE1 <- SPSE2 <- SPSE3 <- SPSE4 <- SPSE5 <- SPSE6 <- SPSE7 <- SPSE8 <- SPSE9 <- SPSE10 <- SPSE11 <- SPSE12 <- SPSE13 <- SPSE14 <- 0
for(i in 1:repeats) {
crimes.test <- crimes.data[index==i,]
crimes.train <- crimes.data[-index!=i,]
# schätzung der parameter
mPrbarr <- glm(normY~(1+prbarr), data = crimes.data)
mPrbpris <- glm(normY~(1+prbpris), data = crimes.data)
mPolpc <- glm(normY~(1+prbpris), data = crimes.data)
mDensity <- glm(normY~(1+density), data = crimes.data)
mArea <- glm(normY~(1+area), data = crimes.data)
mTaxpc <- glm(normY~(1+taxpc), data = crimes.data)
mRegion <- glm(normY~(1+region), data = crimes.data)
mPctmin <- glm(normY~(1+pctmin), data = crimes.data)
mPctymale <- glm(normY~(1+pctymale), data = crimes.data)
mWcon <- glm(normY~(1+wcon), data = crimes.data)
mWsta <- glm(normY~(1+wsta), data = crimes.data)
mWser <- glm(normY~(1+wser), data = crimes.data)
mWtrd <- glm(normY~(1+wtrd), data = crimes.data)
mWfir <- glm(normY~(1+wfir), data = crimes.data)
# schätzung des prognosefehlers
SPSE1 <- SPSE1 + sum((crimes.test$crimes - predict(lm1, newdata=crimes.test))^2)
SPSE2 <- SPSE2 + sum((crimes.test$crimes - predict(lm2, newdata=crimes.test))^2)
SPSE3 <- SPSE3 + sum((crimes.test$crimes - predict(lm3, newdata=crimes.test))^2)
SPSE4 <- SPSE4 + sum((crimes.test$crimes - predict(lm4, newdata=crimes.test))^2)
SPSE5 <- SPSE5 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE6 <- SPSE6 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE7 <- SPSE7 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE8 <- SPSE8 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE9 <- SPSE9 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE10 <- SPSE10 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE11 <- SPSE11 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE12 <- SPSE12 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE13 <- SPSE13 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
SPSE14 <- SPSE14 + sum((crimes.test$crimes - predict(lm5, newdata=crimes.test))^2)
}
cbind(SPSE1, SPSE2, SPSE3, SPSE4, SPSE5, SPSE6, SPSE7, SPSE8, SPSE9, SPSE10, SPSE11, SPSE12, SPSE13, SPSE14)
}
cross_validation_singles()
cvs <- cross_validation_singles(1)
plot(cross_validation_singles())
## mDensity ##
cv <- function(model, repeats = 10) {
index <- rep(1:7, each = 6)
index <- index[-(dim(crimes.data)[1]+1)]
index <- sample(index)
SPSE1 <- 0
for(i in 1:repeats) {
crimes.test <- crimes.data[index==i,]
crimes.train <- crimes.data[-index!=i,]
# schätzung der parameter
#model
# schätzung des prognosefehlers
SPSE1 <- SPSE1 + sum((crimes.test$crimes - predict(model, newdata=crimes.test))^2)
}
SPSE1
}
cv(mDr)
crimes.rl$
mDr <- glm.nb(crimes~(density+region), data = crimes.data)
cv(mDr)
crimes.rl$
mDr <- glm.nb(crimes~(density+region), data = crimes.data)
cv(mDr)
crimes.rl$
mDr <- glm(crimes~(density+region), data = crimes.data)
cv(mDr)
crimes.rl$
mDensityRegion <- glm.nb(crimes~(density+region), data = crimes.data)
mDensityRegion
require("MASS")
crimes.rl$
mDensityRegion <- glm.nb(crimes~(density+region), data = crimes.data)
cv(mDensityRegion)
crimes.rl$
glm.nb(crimes~(density+region), data = crimes.data)
mRegion <- glm.nb(crimes~region, data = crimes.data)
mRegion
plot(crimes~density, data = crimes.data)
crimes.rl$
mDr <- glm.nb(crimes~density+region, data = crimes.data)
cv(mDr)
crimes.rl$
mDr <- glm.nb(crimes~density, data = crimes.data)
crimes.rl$
mDr <- glm.nb(crimes~density, data = crimes.data)
cv(mDr)
mRegion <- glm.nb(crimes~region, data = crimes.data)
cv(mRegion)
crimes.rl$
mR <- glm.nb(crimes~region, data = crimes.data)
cv(mR)
crimes.rl$
mR <- glm.nb(crimes~region+density, data = crimes.data)
cv(mR); cv(mDensity)
mRd <- glm.nb(crimes~region+density+region:density, data = crimes.data)
cv(mR); cv(mDensity); cv(mRd)
anova(mRd)
coefficients(mRd)
test(model = mRd, seed = 541543213)
cv(mR); cv(mDensity); cv(mRd)
AIC(mDensity, mR, mRd)
test(model = mRd, seed = 541543213, theta = 0.6)
test(model = mRd, seed = 541543213, theta = 0.6)
test <- function(seed = 1234, amount = 30, model = mStepO, theta = -1) {
set.seed(seed)
if(theta == -1) {
sP <- rpois(amount, lambda = predict(model, type = "response"))
} else {
sP <- rnegbin(amount, mu = predict(model, type = "response"),
theta = theta)
}
sP <- sP[!is.na(sP)]
sC <- sample(crimes.data$crimes, length(sP))
plot(sC)
points(sP, col = "blue")
i <- 3
for(c in m3O2$coefficients[2:length(m3O2$coefficients)]) {
abline(model$coefficients[[1]], c, col = i)
i <- i+1
}
dist <- sC-sP
dist
print(median(dist))
tm <- cbind(rep(1,amount), sP)
am <- cbind(rep(1,amount), sC)
c  <- cov(tm, am)
print(c)
print(cor(tm, am))
}
test(model = mRd, seed = 541543213, theta = 0.6)
test(model = mRd, seed = 685135, theta = 0.6)
test(model = mRd, seed = 685135, theta = 0.1)
test(model = mRd, seed = 685135, theta = 0.2)
test(model = mRd, seed = 685135, theta = -1)
test(model = mRd, seed = 685135, theta = 1)
mRd
test(model = mRd, seed = 685135, theta = 2.802896879)
mean(crimes.data.west$density)
mean(crimes.data.west$density)
median(crimes.data.west$density) # 86
mean(crimes.data.central$density) # 86
median(crimes.data.central$density) # 78
mean(crimes.data.other$density) # 86
median(crimes.data.other$density) #
crimes.rl
typeof(crimes.rl)
names(crimes.rl)
crimes.rl <- crimes.data # rl: region labeled
for()dim(crimes.rl)[2]
dim(crimes.rl)[2]
dim(crimes.rl)[1]
crimes.rl[,8]
for(i<-1, i<=dim(crimes.rl)[1], i<-i+1) {
if(crimes.rl[i,8] == "central") {
crimes.rl[i,8] <- 1
}
}
crimes.rl
for(i<-1, i<=90, i<-i+1) {
if(crimes.rl[i,8] == "central") {
crimes.rl[i,8] <- 1
}
}
for(i<-1, i<=90, i<-i+1) {
if(crimes.rl[i,8] == "central") {
#crimes.rl[i,8] <- 1
}
}
for(i<-1, i<=90, i<-i+1) {
if(crimes.rl[i,8] == "central") {
#crimes.rl[i,8] <- 1
HUHU
}
}
for(i<-1, i<=90, i<-i+1) {
if(crimes.rl[i,8] == "central") {
#crimes.rl[i,8] <- 1
"HUHU"
}
}
"HUHU"
for(i<-1, i<90, i<-i+1) {
"HUHU"
}
for(i in 1:90) {
"HUHU"
}
print(i)
for (year in 2010:2015){
print(paste("The year is", year))
}
for(i in 1:90) {
print(paste(i))
}
crimes.rl[1,8]
crimes.rl[1,8] <- 1
1 -> crimes.rl[1,8]
output <- matrix(unlist(crimes.rl), ncol = 10, byrow = TRUE)
output
output <- matrix(unlist(crimes.rl), ncol = 14, byrow = TRUE)
output
output <- matrix(crimes.rl, ncol = 14, byrow = TRUE)
output
dim(crimes.rl)
output <- matrix(unlist(crimes.rl), ncol = 16, byrow = TRUE)
output
output <- matrix(unlist(crimes.rl), ncol = 16, byrow = FALSE)
output
crimes.matrix[crimes]
crimes.matrix <- matrix(unlist(crimes.rl), ncol = 16, byrow = FALSE)
crimes.matrix[crimes]
crimes.matrix
crimes.matrix[1]
crimes.matrix[1,]
crimes.matrix[,1]
cor(crimes.matrix[,1], crimes.matrix[,8])
cov(crimes.matrix[,1], crimes.matrix[,8])
cov(crimes.matrix[,1], crimes.matrix[,4])
mDensity <- glm.nb(crimes~density, data = crimes.data.central)
mR <- glm.nb(crimes~region+density, data = crimes.data.central)
mA <- glm.nb(crimes~region+density, data = crimes.data.central)
mRd <- glm.nb(crimes~region+density+region:density, data = crimes.data.central)
crimes.data.central
AIC(mDensity, mR, mRd)
mDensity
plot(crimes.data.central$crimes, crimes.data.central$density)
mDensity$coefficients[1]
abline(mDensity$coefficients[1], mDensity$coefficients[2])
mDensity <- glm.nb(crimes~density, data = crimes.data.west)
plot(crimes.data.west$crimes, crimes.data.west$density)
abline(mDensity$coefficients[1], mDensity$coefficients[2])
mDensity <- glm.nb(crimes~density, data = crimes.data.other)
plot(crimes.data.other$crimes, crimes.data.other$density)
abline(mDensity$coefficients[1], mDensity$coefficients[2])
mDensity <- glm.nb(crimes~density, data = crimes.data.central)
plot(crimes.data.central$crimes, crimes.data.central$density)
abline(mDensity$coefficients[1], mDensity$coefficients[2])
cv(mDensity)
mDensity <- glm.nb(crimes~density, data = crimes.data.west)
plot(crimes.data.west$crimes, crimes.data.west$density)
abline(mDensity$coefficients[1], mDensity$coefficients[2])
cv(mDensity)
mDensity <- glm.nb(crimes~density, data = crimes.data.other)
plot(crimes.data.other$crimes, crimes.data.other$density)
abline(mDensity$coefficients[1], mDensity$coefficients[2])
cv(mDensity)
cov(crimes.matrix[,1], crimes.matrix[,4])
cov(crimes.matrix[,1], crimes.matrix[,8])
cov(crimes.matrix[,1], crimes.matrix[,7])
crimes.data
m1 <- glm.nb(formula = crimes ~ prbarr + prbpris + polpc + density + area + region + pctmin + pctymale + wcon + wsta + wser +
wtrd + wfir + prbarr:prbpris + prbarr:polpc + prbarr:density +
prbarr:area + prbarr:region + prbarr:pctmin +
prbarr:pctymale + prbarr:wcon + prbarr:wsta + prbarr:wser +
prbarr:wtrd + prbarr:wfir + prbpris:polpc + prbpris:density +
prbpris:area + prbpris:region + prbpris:pctmin +
prbpris:pctymale + prbpris:wcon + prbpris:wsta + prbpris:wser +
prbpris:wtrd + prbpris:wfir + polpc:density + polpc:area + polpc:region + polpc:pctmin + polpc:pctymale +
polpc:wcon + polpc:wsta + polpc:wser + polpc:wtrd + polpc:wfir +
density:area + density:region + density:pctmin +
density:pctymale + density:wcon + density:wsta + density:wser +
density:wtrd + density:wfir + area:region +
area:pctmin + area:pctymale + area:wcon + area:wsta + area:wser +
area:wtrd + area:wfir + region:pctmin +
region:pctymale + region:wcon, data = crimes.data)
plot(mStep, which = 1)
m13Aw
cor(crimes.data$crimes, crimes.data$prbarr)
cor(crimes.data$crimes, crimes.data$prbpris)
plot(cvC)
cvC <- cbind(cv(m1), cv(m2), cv(m3), cv(m4), cv(m5))
cvC <- cvC/max(cvC)
min(cvC)
plot(cvC)
test(seed = 6546512, model = m2, theta = -1) #-94.5
mDensity <- glm.nb(crimes~density, data = crimes.data)
test(seed = 6546512, model = mDensity, theta = 0.54)
test(seed = 6153134) #-431
test(seed = 6546512, model = m2, theta = -1) #-94.5
